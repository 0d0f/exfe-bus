package main

import (
	"fmt"
	"strings"
)

type Service struct {
}

func (s *Service) Abc(arg string, reply *string) error {
}

func (s *Service) Def(args []string) error {
}

func main() {
    protocol := NewRedisProtocol("", 0, "")
	queue := NewFIFOQueue(protocol, "testqueue")

    server := NewRPCorBatchServer(protocol)
    server.SetQueue(queue)
	server.Register(Service)
	server.Serve()

    p := NewRedisBus("", 0, "")
	client := redis.Client(p, "testqueue")

	var reply string
	err := client.Do("Abc", "a", &reply)
	client.Send("Abc", "a")
	client.Send("Def", "e")
	client.Send("Def", "f")
	client.Send("Def", "g")

	err = client.Do("Def", "a", &reply)
	err.Error() == "Can't find service: Def(arg, reply)"

	retry := DefaultRetryServer("", 0, "")
	retry.Serve()
}
